面试题56 - I. 数组中数字出现的次数
一个整型数组 nums 里除两个数字之外，其他数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是O(n)，空间复杂度是O(1)。

 

示例 1：

输入：nums = [4,1,4,6]
输出：[1,6] 或 [6,1]
示例 2：

输入：nums = [1,2,10,4,1,4,3,3]
输出：[2,10] 或 [10,2]


解题思路
很直观的思路，可能让时间复杂度变大，不过很好理解
直接用map来存数，如果出现重复的数，就删掉该数。然后遍历map，用一个数组保存map的值，返回数组

代码

func singleNumbers(nums []int) []int {
    var numone map[int]int
    numone = make(map[int]int, len(nums))
    for _,v := range nums {
       if _,ok := numone[v]; !ok{
           numone[v] = v
       } else {
           delete(numone, v)
       }
    }
    var arr []int
    for v := range numone {
        arr = append(arr, v)
    }
    return arr
}

作者：wit1998
链接：https://leetcode-cn.com/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof/solution/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-by-wit1998/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
