面试题55 - I. 二叉树的深度
输入一棵二叉树的根节点，求该树的深度。从根节点到叶节点依次经过的节点（含根、叶节点）形成树的一条路径，最长路径的长度为树的深度。

例如：

给定二叉树 [3,9,20,null,null,15,7]，

    3
   / \
  9  20
    /  \
   15   7
返回它的最大深度 3 。

 

提示：

节点总数 <= 10000


解题思路
直接dfs，递归一次就累加。

代码

/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
var max int
func maxDepth(root *TreeNode) int {
    max = 0
    dfs(root,1)
    return max
}

func dfs(root *TreeNode,m int){
    if root != nil{
        if max < m {
            max = m
        }
        dfs(root.Left,m+1)
        dfs(root.Right,m+1)
    }
}


作者：wit1998
链接：https://leetcode-cn.com/problems/er-cha-shu-de-shen-du-lcof/solution/er-cha-shu-de-shen-du-by-wit1998/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
