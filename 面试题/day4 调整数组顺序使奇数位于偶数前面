面试题21. 调整数组顺序使奇数位于偶数前面
输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有奇数位于数组的前半部分，所有偶数位于数组的后半部分。

 

示例：

输入：nums = [1,2,3,4]
输出：[1,3,2,4] 
注：[3,1,2,4] 也是正确的答案之一。
 

提示：

1 <= nums.length <= 50000
1 <= nums[i] <= 10000

### 解题思路
几种解法：
1. 如果出现奇数，就与最前面的数交换，然后最前面的从nums[0] 变成nums[1]
2. 使用双指针

### 代码

```golang
func exchange(nums []int) []int {
    j := 0
    for i := 0; i < len(nums); i++{
        if nums[i] % 2 == 1 {
          if i != j{
            nums[i], nums[j] = nums[j], nums[i]
          }  
          j++
        }
    }
    return nums
}
