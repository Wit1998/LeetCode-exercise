面试题07. 重建二叉树
输入某二叉树的前序遍历和中序遍历的结果，请重建该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。

 

例如，给出

前序遍历 preorder = [3,9,20,15,7]
中序遍历 inorder = [9,3,15,20,7]
返回如下的二叉树：

    3
   / \
  9  20
    /  \
   15   7
 

限制：

0 <= 节点个数 <= 5000


解题思路
首先，搞懂先序遍历和中序遍历的含义
先序遍历指从根节点开始，遍历完所有左节点（按照根-左-右的顺序），再遍历所有右节点
先序遍历指从根节点下最左侧的节点开始，遍历完所有左节点（按照左-根-右的顺序），再遍历所有右节点
最后要注意，preorder[]中[]是前开后闭的区间。

代码

/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func buildTree(preorder []int, inorder []int) *TreeNode {
    if len(preorder) == 0 {
        return nil
    }
    var left_Idx int 
    //遍历中序遍历数组
    for i,v := range inorder {
        //如果找到等于preorder(0)的值，说明找到根节点。
        if v == preorder[0] {
            //这里表示左节点有多少个
            left_Idx = i
            break
        }
    }
    //建立根节点,更节点的值是前序遍历的首值
    root := &TreeNode{
        Val : preorder[0],
        }
    root.Left = buildTree(preorder[1 : left_Idx + 1], inorder[ : left_Idx])
    root.Right = buildTree(preorder[left_Idx + 1: ], inorder[left_Idx + 1 : ] )
    return root
}

作者：wit1998
链接：https://leetcode-cn.com/problems/zhong-jian-er-cha-shu-lcof/solution/zhong-jian-er-cha-shu-by-wit1998/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
