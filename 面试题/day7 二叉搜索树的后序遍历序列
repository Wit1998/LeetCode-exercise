面试题33. 二叉搜索树的后序遍历序列
输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历结果。如果是则返回 true，否则返回 false。假设输入的数组的任意两个数字都互不相同。

 

参考以下这颗二叉搜索树：

     5
    / \
   2   6
  / \
 1   3
示例 1：

输入: [1,6,3,2,5]
输出: false
示例 2：

输入: [1,3,2,6,5]
输出: true
 

提示：

数组长度 <= 1000


解题思路
思路很简单，因为是二叉搜索树，左边的所有节点肯定小于根节点，右边的所有节点肯定大于根节点。

代码

func verifyPostorder(postorder []int) bool {
    if len(postorder) <= 2 {
        return true
    }
    head := len(postorder) - 1
   
    for head != 0 {
        i := 0 
        for postorder[i] < postorder[head] {
            i++
        }
        for postorder[i] > postorder[head] {
            i++
        }
        if i != head {
            return false
        }
        head--
    }
    return true
}

作者：wit1998
链接：https://leetcode-cn.com/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof/solution/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-by-wit/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
