面试题61. 扑克牌中的顺子
从扑克牌中随机抽5张牌，判断是不是一个顺子，即这5张牌是不是连续的。2～10为数字本身，A为1，J为11，Q为12，K为13，而大、小王为 0 ，可以看成任意数字。A 不能视为 14。

 

示例 1:

输入: [1,2,3,4,5]
输出: True
 

示例 2:

输入: [0,0,1,2,5]
输出: True
 

限制：

数组长度为 5 

数组的数取值为 [0, 13] .


解题思路
方法比较巧妙，如果是顺子，那么他们都相隔1，五个数，除开0外因此相差不能大于5，且不能小于等于0，这样0才能补上不是连续的数。

代码

func isStraight(nums []int) bool {
    sort.Ints(nums)
    var sub int
    for i := 0; i < 4; i++ {
        if nums[i] == 0 {
            continue
        }
        if nums[i] == nums[i + 1] {
            return false
        }
        sub += nums[i + 1] - nums[i]
        }    
    return sub < 5
}

作者：wit1998
链接：https://leetcode-cn.com/problems/bu-ke-pai-zhong-de-shun-zi-lcof/solution/bu-ke-pai-zhong-de-shun-zi-by-wit1998/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
