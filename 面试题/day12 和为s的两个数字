面试题57. 和为s的两个数字
输入一个递增排序的数组和一个数字s，在数组中查找两个数，使得它们的和正好是s。如果有多对数字的和等于s，则输出任意一对即可。

 

示例 1：

输入：nums = [2,7,11,15], target = 9
输出：[2,7] 或者 [7,2]
示例 2：

输入：nums = [10,26,30,31,47,60], target = 40
输出：[10,30] 或者 [30,10]
 

限制：

1 <= nums.length <= 10^5
1 <= nums[i] <= 10^6


解题思路
双指针，很简单

代码

func twoSum(nums []int, target int) []int {
    //双指针
    first := 0
    last := len(nums) - 1
    //大于目标值的数字全都排除
    for nums[last]>target{
            last--
    }
    for first <= last {
        if nums[first] + nums[last] == target {
            return []int{nums[first], nums[last]}
        } 
        if nums[first] + nums[last] < target {
            first++
        } else  {
            last--
        }
    }
    return nil
}

作者：wit1998
链接：https://leetcode-cn.com/problems/he-wei-sde-liang-ge-shu-zi-lcof/solution/he-wei-sde-liang-ge-shu-zi-by-wit1998/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
