面试题49. 丑数
我们把只包含因子 2、3 和 5 的数称作丑数（Ugly Number）。求按从小到大的顺序的第 n 个丑数。

 

示例:

输入: n = 10
输出: 12
解释: 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 是前 10 个丑数。
说明:  

1 是丑数。
n 不超过1690。


解题思路
简单的动态规划，当然dp的形式也有很多种

代码

func nthUglyNumber(n int) int {
    dp := make([]int, n)
    index1, index2, index3 := 0, 0, 0
    dp[0] = 1
    for i := 1; i < n; i++ {
        //在丑数的基础上乘以丑数，得到的数肯定是丑数
        dp[i] = min( dp[index1]*2, min( dp[index2]*3, dp[index3]*5 ))
        if dp[i] == dp[index1]*2 {
            index1++
        }
        if dp[i] == dp[index2]*3 {
            index2++
        }
        if dp[i] == dp[index3]*5 {
            index3++
        }
    }
    return dp[n - 1]
}
func min (a,b int) int {
    if a > b {
        return b
    }else {
        return a
    }
}

作者：wit1998
链接：https://leetcode-cn.com/problems/chou-shu-lcof/solution/chou-shu-by-wit1998/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
