面试题32 - III. 从上到下打印二叉树 III
请实现一个函数按照之字形顺序打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右到左的顺序打印，第三行再按照从左到右的顺序打印，其他行以此类推。
例如:
给定二叉树: [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回其层次遍历结果：
[
  [3],
  [20,9],
  [15,7]
]
提示：
节点总数 <= 1000


解题思路
转换左右子树时，相当于从前面添加值到res[i]中，即可实现。

代码

/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func levelOrder(root *TreeNode) [][]int {
    if root == nil {
        return nil 
    }
    //创建一个二维的数组，
    var res [][]int
    var i int = 0
    //创建一个队列，里面有根节点
    queue := []*TreeNode{root}

    for len(queue) != 0 {
        //创建一个空的临时队列，用来保存每一层中的值
        temp := []*TreeNode{}
        //保存每一层
        res = append(res, []int{})
        for _,v := range queue {
            //奇数层
            if i % 2 == 1 {
                resTemp := []int{v.Val}
                res[i] = append(resTemp, res[i]...)
            }else {
                res[i] = append(res[i], v.Val)

            }
            if v.Left != nil {
                temp = append(temp, v.Left)
            }
            if v.Right != nil {
                temp = append(temp, v.Right)
            }
        }
        queue = temp
        i++
    }
        
    return res    
}

作者：wit1998
链接：https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof/solution/cong-shang-dao-xia-da-yin-er-cha-shu-iii-by-wit199/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
